name: Publish Release

on:
  push:
    tags:
      - '*.*.*'  # Trigger only on semantic version tags

jobs:
  publish:
    name: Publish Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Dependencies
        working-directory: clients/python/percolate
        run: |
          python -m pip install --upgrade pip
          pip install poetry pytest toml
          poetry install

      - name: Extract Version from Git Tag
        id: extract_version
        run: |
          TAG=${GITHUB_REF#refs/tags/}  # Get the tag (e.g., '1.2.3')
          echo "version=$TAG" >> $GITHUB_ENV  # Save the version to an environment variable
          echo "version=$TAG" >> $GITHUB_OUTPUT  # Also store in outputs for later use

      - name: Sync Version to pyproject.toml
        run: |
          VERSION=${{ env.version }}
          python scripts/update_version.py "$VERSION"
        shell: bash

      - name: Run Tests (excluding slow)
        working-directory: clients/python/percolate
        run: |
          pytest -m "not slow"

      - name: Build Package
        working-directory: clients/python/percolate
        run: |
          poetry build

      - name: Publish to PyPI
        working-directory: clients/python/percolate
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
        run: |
          poetry publish --username __token__ --password $POETRY_PYPI_TOKEN_PYPI

      # Setup for multi-arch docker build
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Determine if Release is Final
        id: is_final
        run: |
          if [[ "${{ steps.extract_version.outputs.version }}" =~ (alpha|beta|rc) ]]; then
            echo "final=false" >> $GITHUB_OUTPUT
          else
            echo "final=true" >> $GITHUB_OUTPUT
          fi

      - name: Build and Push Multi-Arch Docker Image
        uses: docker/build-push-action@v5
        with:
          context: clients/python/percolate
          file: clients/python/percolate/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/your-image-name:${{ steps.extract_version.outputs.version }}
            ${{ secrets.DOCKER_USERNAME }}/your-image-name${{ steps.is_final.outputs.final == 'true' && ':latest' || '' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

# Create a tag for the release version
#git tag 0.1.822
# Push the tag to GitHub
#git push origin  0.1.822
#
